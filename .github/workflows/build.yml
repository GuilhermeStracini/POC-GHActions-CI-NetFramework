name: Build & Test .NET Framework
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
    
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 19.0.2+7
          
      - name: Set value to file and read it
        run: |
          echo "127.0.0.1" > Src/ip.txt
          echo "ip=$(type Src/ip.txt)" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Use environment variable from file
        run: |
          echo "${{ env.solution }}"
          ping ${{ env.ip }} -n 5

      - name: Set environment variables
        run: |
          echo "solution=$(([io.fileinfo]$(Get-ChildItem -Path .\* -Include *.sln)).name)" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "sonar_key=$("${{ github.repository }}" -replace "/","_")" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Setup Nuget
        uses: NuGet/setup-nuget@v1.2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: Restore NuGet Packages
        run: nuget restore "${{ env.solution }}"

      - name: Build
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ env.sonar_key }}" /o:"$("${{ github.repository_owner }}".ToLower())" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          msbuild "${{ env.solution }}" /p:Configuration=Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Test
        run: vstest.console.exe .\Test\GHActionsCI.UnitTests\bin\Release\GHActionsCI.UnitTests.dll

      - name: Run
        run: Src\GHActionsCI\bin\Release\GHActionsCI.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: release
          path: Src\GHActionsCI\bin\Release\

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: guibranco
    
      - name: Download release
        uses: actions/download-artifact@v3
        with:
          name: release

      - name: Upload to test FTP
        uses: sebastianpopp/ftp-action@releases/v2
        continue-on-error: true
        with:
          host: ftp://ftp.dlptest.com/
          user: dlpuser
          password: rNrKYTX9g7z3RgJRmxWuGHbeu

  cleanup:
  
    name: Cleanup
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Remove artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: "*"
